{"version":3,"sources":["services/config.js","App.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","props","writeUserData","Firebase","database","ref","set","state","console","log","getUserData","on","snapshot","val","setState","handleSubmit","event","preventDefault","name","refs","value","role","uid","developers","devIndex","findIndex","data","Date","getTime","toString","push","removeData","developer","newState","filter","updateData","apps","length","initializeApp","this","prevProps","prevState","provider","auth","GoogleAuthProvider","addScope","useDeviceLanguage","setCustomParameters","signInWithPopup","then","result","credential","token","accessToken","currentUser","user","email","catch","error","code","message","signOut","Fragment","className","src","alt","onClick","authentication","signout","map","style","width","marginRight","onSubmit","type","placeholder","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aace3ef1.chunk.js","sourcesContent":["\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB0cVmOa_rETlPWcLyiGsAvxpgArH3E-No\",\n    authDomain: \"dialexadeets-783bc.firebaseapp.com\",\n    projectId: \"dialexadeets-783bc\",\n    storageBucket: \"dialexadeets-783bc.appspot.com\",\n    messagingSenderId: \"710837960305\",\n    appId: \"1:710837960305:web:1e269a565172a9d85265d0\",\n    measurementId: \"G-L7MQXEEG6C\"\n  };   \n\n  \nexport default firebaseConfig;  ","import React from \"react\";\n\nimport Firebase from \"firebase\";\nimport firebaseConfig from \"./services/config\";\nimport GoogleButton from 'react-google-button';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if (!Firebase.apps.length) { //just a check for no firebase duplicates\n    Firebase.initializeApp(firebaseConfig);\n    }\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  writeUserData = () => {\n    Firebase.database()\n      .ref(\"/\")\n      .set(this.state);\n    console.log(\"DATA SAVED\");\n  };\n\n  getUserData = () => {\n     let ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", snapshot => {\n      const state = snapshot.val();\n      this.setState(state);\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let name = this.refs.name.value;\n    let role = this.refs.role.value;\n    let uid = this.refs.uid.value;\n\n    if (uid && name && role) {\n      const { developers } = this.state;\n      const devIndex = developers.findIndex(data => {\n        return data.uid === uid;\n      });\n      developers[devIndex].name = name;\n      developers[devIndex].role = role;\n      this.setState({ developers });\n    } else if (name && role) {\n      const uid = new Date().getTime().toString();\n      const { developers } = this.state;\n      developers.push({ uid, name, role });\n      this.setState({ developers });\n    }\n\n    this.refs.name.value = \"\";\n    this.refs.role.value = \"\";\n    this.refs.uid.value = \"\";\n  };\n\n  removeData = developer => {\n    const { developers } = this.state;\n    const newState = developers.filter(data => {\n      return data.uid !== developer.uid;\n    });\n    this.setState({ developers: newState });\n  };\n\n  updateData = developer => {\n    this.refs.uid.value = developer.uid;\n    this.refs.name.value = developer.name;\n    this.refs.role.value = developer.role;\n  };\n\n  //GOOGLE AUTHENTICATION \\/ \\/ \\/ \\/ \\/ \n  authentication() {\n    var provider = new Firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/userinfo.profile'); //asks for users profile\n    provider.addScope('https://www.googleapis.com/auth/user.birthday.read'); //asks for user bd\n    provider.addScope('https://www.googleapis.com/auth/userinfo.email'); //and email\n    Firebase.auth().useDeviceLanguage();\n    provider.setCustomParameters({ \n        'login_hint': 'user@dialexa.com'\n    });\n    Firebase.auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential;\n      console.log(credential);\n \n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = credential.accessToken;\n      // The signed-in user info.\n      var currentUser = result.user;\n      // ...\n      console.log(token);\n      console.log(currentUser.email); //prints user email to console! lfg\n    }).catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...     console.log(user)\n      \n  \n      //take you to new page?\n    });\n  };\n\n  signout() {\n    Firebase.auth().signOut().then(() => {\n      console.log(\"Signed out!\");\n  \n    }).catch((error) => { \n      console.log(\"Can't be signed out!\");\n\n    })\n  }\n\n\nrender() {\n    const { developers } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <h1>Dialexa Deets Test Page</h1>\n              <img src=\"https://images.squarespace-cdn.com/content/v1/590895c0c534a53150578614/1494348858995-JD5N0C1YTJHG1M1E6RA9/ke17ZwdGBToddI8pDm48kIEUUicUWNT1QMva-rSuidtZw-zPPgdn4jUwVcJE1ZvWEtT5uBSRWt4vQZAgTJucoTqqXjS3CfNDSuuf31e0tVEfRGHfD04-EYvAJQ1amXosO5im0bt7e9EzuE_obzP6KGQ6l2WM7tn7mqHTODzkmeM/image-asset.png\" alt=\"Mr Roboto\" />\n              <GoogleButton onClick={() => {\n                console.log('Google Auth Clicked');\n                this.authentication();\n              }} />\n              <button onClick={() => {\n                console.log('Sign out clicked');\n                this.signout();\n              }}>Log Out Here!</button>\n          </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              {developers.map(developer => (\n                <div\n                  key={developer.uid}\n                  className=\"card float-left\"\n                  style={{ width: \"18rem\", marginRight: \"1rem\" }}\n                >\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{developer.name}</h5>\n                    <p className=\"card-text\">{developer.role}</p>\n                    <button\n                      onClick={() => this.removeData(developer)}\n                      className=\"btn btn-link\"\n                    >\n                      Delete\n                    </button>\n                    <button\n                      onClick={() => this.updateData(developer)}\n                      className=\"btn btn-link\"\n                    >\n                      Edit\n                    </button>\n                    \n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xl-12\">\n              <h1>Add new team member here</h1> <form onSubmit={this.handleSubmit}>\n                <div className=\"form-row\">\n                  <input type=\"hidden\" ref=\"uid\" />\n                  <div className=\"form-group col-md-6\">\n                    <label>Name</label>\n                    <input\n                      type=\"text\"\n                      ref=\"name\"\n                      className=\"form-control\"\n                      placeholder=\"Name\"\n                    />\n                  </div>\n                  <div className=\"form-group col-md-6\">\n                    <label>Role</label>\n                    <input\n                      type=\"text\"\n                      ref=\"role\"\n                      className=\"form-control\"\n                      placeholder=\"Role\"\n                    />\n                  </div>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Save\n                </button>\n              </form>\n            </div>\n          </div>\n          <div className=\"row\">\n        \n          </div>\n        </div>\n      </React.Fragment>\n    );\n    \n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}