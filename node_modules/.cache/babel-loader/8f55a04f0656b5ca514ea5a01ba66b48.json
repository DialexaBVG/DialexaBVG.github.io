{"ast":null,"code":"var _jsxFileName = \"/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './views/Login/Login.js';\nimport GameSelector from './views/HomePage/GameSelector.js';\nimport ModeSelector from './views/HomePage/ModeSelector.js';\nimport Paper from './components/Onboarding/PaperComponent.js';\nimport Question from './components/Game/Question.js';\nimport quizQuestions from './components/Game/quizQuestions.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {},\n      result: ''\n    };\n  }\n\n  componentDidMount() {\n    const shuffledAnswerOptions = quizQuestions.map(question => this.shuffleArray(question.answers));\n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: shuffledAnswerOptions[0]\n    });\n  }\n\n  shuffleArray(array) {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"React Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Quiz, {\n        answer: this.state.answer,\n        answerOptions: this.state.answerOptions,\n        questionId: this.state.questionId,\n        question: this.state.question,\n        questionTotal: quizQuestions.length,\n        onAnswerSelected: this.handleAnswerSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  } // return (\n  //     <BrowserRouter>\n  //         <Switch>\n  //             <Route\n  //                 path=\"/\"\n  //                 exact\n  //                 render={() => (\n  //                     <Question content=\"What's your name?\" />\n  //                 )}\n  //             />\n  //             <Route\n  //                 path=\"/onboard\"\n  //                 exact\n  //                 render={() => (\n  //                     <Paper />\n  //                 )}\n  //             />\n  //             <Route\n  //                 path=\"/game\"\n  //                 exact\n  //                 render={() => (\n  //                     <GameSelector />\n  //                 )}\n  //             />\n  //             <Route\n  //                 path=\"/mode\"\n  //                 exact\n  //                 render={() => (\n  //                     <ModeSelector />\n  //                 )}\n  //             />\n  //         </Switch>\n  //     </BrowserRouter>\n  // );\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","Login","GameSelector","ModeSelector","Paper","Question","quizQuestions","App","constructor","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","componentDidMount","shuffledAnswerOptions","map","shuffleArray","answers","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","render","handleAnswerSelected"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA4C,kBAA5C;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAkB,2CAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AACxBW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,UAAU,EAAE,CAFD;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,aAAa,EAAE,EAJJ;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXC,MAAAA,YAAY,EAAE,EANH;AAOXC,MAAAA,MAAM,EAAE;AAPG,KAAb;AASD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,qBAAqB,GAAGb,aAAa,CAACc,GAAd,CAAmBP,QAAD,IAAc,KAAKQ,YAAL,CAAkBR,QAAQ,CAACS,OAA3B,CAAhC,CAA9B;AAEA,SAAKC,QAAL,CAAc;AACZV,MAAAA,QAAQ,EAAEP,aAAa,CAAC,CAAD,CAAb,CAAiBO,QADf;AAEZC,MAAAA,aAAa,EAAEK,qBAAqB,CAAC,CAAD;AAFxB,KAAd;AAID;;AAEDE,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,QAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,QAAiCC,cAAjC;AAAA,QAAiDC,WAAjD,CADkB,CAGlB;;AACA,WAAO,MAAMH,YAAb,EAA2B;AAEzB;AACAG,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,MAAAA,YAAY,IAAI,CAAhB,CAJyB,CAMzB;;AACAE,MAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,MAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,MAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,WAAOH,KAAP;AACD;;AAEHQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AACI,QAAA,MAAM,EAAE,KAAKtB,KAAL,CAAWK,MADvB;AAEY,QAAA,aAAa,EAAE,KAAKL,KAAL,CAAWI,aAFtC;AAGY,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWE,UAHnC;AAIY,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAJjC;AAKY,QAAA,aAAa,EAAEP,aAAa,CAACoB,MALzC;AAMY,QAAA,gBAAgB,EAAE,KAAKO;AANnC;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GA3DuB,CA6DxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA9FwB;;AAiG5B,eAAe1B,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\n\nimport Login from './views/Login/Login.js';\nimport GameSelector from './views/HomePage/GameSelector.js';\nimport ModeSelector from './views/HomePage/ModeSelector.js';\nimport Paper from './components/Onboarding/PaperComponent.js';\nimport Question from './components/Game/Question.js';\nimport quizQuestions from './components/Game/quizQuestions.js';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          counter: 0,\n          questionId: 1,\n          question: '',\n          answerOptions: [],\n          answer: '',\n          answersCount: {},\n          result: ''\n        };\n      }\n\n      componentDidMount() {\n        const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));  \n      \n        this.setState({\n          question: quizQuestions[0].question,\n          answerOptions: shuffledAnswerOptions[0]\n        });\n      }\n\n      shuffleArray(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\">\n                    <h2>React Quiz</h2>\n                </div>\n                <Quiz\n                    answer={this.state.answer}\n                            answerOptions={this.state.answerOptions}\n                            questionId={this.state.questionId}\n                            question={this.state.question}\n                            questionTotal={quizQuestions.length}\n                            onAnswerSelected={this.handleAnswerSelected}\n                        />\n                    </div>\n        );\n    }\n\n    // return (\n    //     <BrowserRouter>\n    //         <Switch>\n    //             <Route\n    //                 path=\"/\"\n    //                 exact\n    //                 render={() => (\n    //                     <Question content=\"What's your name?\" />\n    //                 )}\n    //             />\n    //             <Route\n    //                 path=\"/onboard\"\n    //                 exact\n    //                 render={() => (\n    //                     <Paper />\n    //                 )}\n    //             />\n    //             <Route\n    //                 path=\"/game\"\n    //                 exact\n    //                 render={() => (\n    //                     <GameSelector />\n    //                 )}\n    //             />\n    //             <Route\n    //                 path=\"/mode\"\n    //                 exact\n    //                 render={() => (\n    //                     <ModeSelector />\n    //                 )}\n    //             />\n    //         </Switch>\n    //     </BrowserRouter>\n    // );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}