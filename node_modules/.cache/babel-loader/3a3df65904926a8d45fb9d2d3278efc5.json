{"ast":null,"code":"import _defineProperty from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/summergerhart/Documents/dialexabvg.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Quiz from'../components/Game/Quiz.js';import quizQuestions from'../components/Game/quizQuestions.js';import Result from'../components/Game/Result.js';import'../components/Game/game.css';import{jsx as _jsx}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={counter:0,questionId:1,question:'',answerOptions:[],answer:'',answersCount:{},result:''};_this.handleAnswerSelected=_this.handleAnswerSelected.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var shuffledAnswerOptions=quizQuestions.map(function(question){return _this2.shuffleArray(question.answers);});this.setState({question:quizQuestions[0].question,answerOptions:shuffledAnswerOptions[0]});}},{key:\"shuffleArray\",value:function shuffleArray(array){var currentIndex=array.length,temporaryValue,randomIndex;// While there remain elements to shuffle...\nwhile(0!==currentIndex){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;// And swap it with the current element.\ntemporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;}},{key:\"handleAnswerSelected\",value:function handleAnswerSelected(event){var _this3=this;this.setUserAnswer(event.currentTarget.value);if(this.state.questionId<quizQuestions.length){setTimeout(function(){return _this3.setNextQuestion();},300);}else{setTimeout(function(){return _this3.setResults(_this3.getResults());},300);}}},{key:\"setUserAnswer\",value:function setUserAnswer(answer){this.setState(function(state){return{answersCount:_objectSpread(_objectSpread({},state.answersCount),{},_defineProperty({},answer,(state.answersCount[answer]||0)+1)),answer:answer};});}},{key:\"setNextQuestion\",value:function setNextQuestion(){var counter=this.state.counter+1;var questionId=this.state.questionId+1;this.setState({counter:counter,questionId:questionId,question:quizQuestions[counter].question,answerOptions:quizQuestions[counter].answers,answer:''});}},{key:\"getResults\",value:function getResults(){var answersCount=this.state.answersCount;// const answersCountKeys = Object.keys(answersCount);\n// const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\n// const maxAnswerCount = Math.max.apply(null, answersCountValues);\nreturn answersCount.Correct;}},{key:\"setResults\",value:function setResults(result){if(result==null){this.setState({result:'0'});}else{this.setState({result:result});}// if (result.length === 1) {\n//   this.setState({ result: result[0] });\n// } else {\n//   this.setState({ result: 'Undetermined' });\n// }\n}},{key:\"renderQuiz\",value:function renderQuiz(){return/*#__PURE__*/_jsx(Quiz,{answer:this.state.answer,answerOptions:this.state.answerOptions,questionId:this.state.questionId,question:this.state.question,questionTotal:quizQuestions.length,onAnswerSelected:this.handleAnswerSelected});}},{key:\"renderResult\",value:function renderResult(){return/*#__PURE__*/_jsx(Result,{quizResult:this.state.result});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:this.state.result?this.renderResult():this.renderQuiz()});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/summergerhart/Documents/dialexabvg.github.io/src/views/PlayGame.js"],"names":["React","Quiz","quizQuestions","Result","App","props","state","counter","questionId","question","answerOptions","answer","answersCount","result","handleAnswerSelected","bind","shuffledAnswerOptions","map","shuffleArray","answers","setState","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","event","setUserAnswer","currentTarget","value","setTimeout","setNextQuestion","setResults","getResults","Correct","renderResult","renderQuiz","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Quiz from '../components/Game/Quiz.js';\nimport quizQuestions from '../components/Game/quizQuestions.js';\nimport Result from '../components/Game/Result.js';\nimport '../components/Game/game.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n      \n        this.state = {\n          counter: 0,\n          questionId: 1,\n          question: '',\n          answerOptions: [],\n          answer: '',\n          answersCount: {},\n          result: ''\n        };\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n      }\n\n      componentDidMount() {\n        const shuffledAnswerOptions = quizQuestions.map((question) => this.shuffleArray(question.answers));  \n      \n        this.setState({\n          question: quizQuestions[0].question,\n          answerOptions: shuffledAnswerOptions[0]\n        });\n      }\n\n      shuffleArray(array) {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n      \n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n      \n          // Pick a remaining element...\n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          // And swap it with the current element.\n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n      \n        return array;\n      };\n\n      handleAnswerSelected(event) {\n        this.setUserAnswer(event.currentTarget.value);\n        if (this.state.questionId < quizQuestions.length) {\n            setTimeout(() => this.setNextQuestion(), 300);\n          } else {\n            setTimeout(() => this.setResults(this.getResults()), 300);\n          }\n      }\n\n      setUserAnswer(answer) {\n        this.setState((state) => ({\n          answersCount: {\n            ...state.answersCount,\n            [answer]: (state.answersCount[answer] || 0) + 1\n          },\n          answer: answer\n        }));\n      }\n\n      setNextQuestion() {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n        this.setState({\n          counter: counter,\n          questionId: questionId,\n          question: quizQuestions[counter].question,\n          answerOptions: quizQuestions[counter].answers,\n          answer: ''\n        });\n      }\n\n      getResults() {\n        const answersCount = this.state.answersCount;\n        // const answersCountKeys = Object.keys(answersCount);\n        // const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\n        // const maxAnswerCount = Math.max.apply(null, answersCountValues);\n      \n        return answersCount.Correct;\n      }\n\n      setResults (result) {\n        if (result == null) {\n            this.setState({ result: '0'});\n        } else {\n            this.setState({ result});\n        }\n        // if (result.length === 1) {\n        //   this.setState({ result: result[0] });\n        // } else {\n        //   this.setState({ result: 'Undetermined' });\n        // }\n      }\n\n      renderQuiz() {\n        return (\n          <Quiz\n            answer={this.state.answer}\n            answerOptions={this.state.answerOptions}\n            questionId={this.state.questionId}\n            question={this.state.question}\n            questionTotal={quizQuestions.length}\n            onAnswerSelected={this.handleAnswerSelected}\n          />\n        );\n      }\n      \n      renderResult() {\n        return (\n          <Result quizResult={this.state.result} />\n        );\n      }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}