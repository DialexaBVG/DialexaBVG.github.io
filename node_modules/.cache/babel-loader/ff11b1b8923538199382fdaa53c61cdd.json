{"ast":null,"code":"var _jsxFileName = \"/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/views/Login/Login.js\";\nimport React from 'react';\nimport Firebase from 'firebase';\nimport firebaseConfig from '../../services/config';\nimport GoogleButton from '../../components/GoogleButton.js';\nimport { authentication } from '../../helpers/authentication.js';\nimport { Redirect } from 'react-router-dom';\nimport BVGLogoWithShadow from '../../assets/BVGLogoWithShadow.png';\nimport { Box } from \"@material-ui/core\";\nimport './Login.css';\nimport bearGif from '../../assets/beargif.gif';\nimport gorillaGif from '../../assets/gorilla.gif';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.signedIn = true;\n\n    this.writeUserData = () => {\n      Firebase.database().ref(\"/\").set(this.state);\n      console.log(\"DATA SAVED\");\n    };\n\n    this.getUserData = () => {\n      let ref = Firebase.database().ref(\"/\");\n      ref.on(\"value\", snapshot => {\n        const state = snapshot.val();\n        this.setState(state);\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let name = this.refs.name.value;\n      let role = this.refs.role.value;\n      let uid = this.refs.uid.value;\n\n      if (uid && name && role) {\n        const {\n          developers\n        } = this.state;\n        const devIndex = developers.findIndex(data => {\n          return data.uid === uid;\n        });\n        developers[devIndex].name = name;\n        developers[devIndex].role = role;\n        this.setState({\n          developers\n        });\n      } else if (name && role) {\n        const uid = new Date().getTime().toString();\n        const {\n          developers\n        } = this.state;\n        developers.push({\n          uid,\n          name,\n          role\n        });\n        this.setState({\n          developers\n        });\n      }\n\n      this.refs.name.value = \"\";\n      this.refs.role.value = \"\";\n      this.refs.uid.value = \"\";\n    };\n\n    this.removeData = developer => {\n      const {\n        developers\n      } = this.state;\n      const newState = developers.filter(data => {\n        return data.uid !== developer.uid;\n      });\n      this.setState({\n        developers: newState\n      });\n    };\n\n    this.updateData = developer => {\n      this.refs.uid.value = developer.uid;\n      this.refs.name.value = developer.name;\n      this.refs.role.value = developer.role;\n    };\n\n    this.renderOut = signedIn => {\n      return {\n        signedIn: /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/onboardingstepper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 27\n        }, this)\n      };\n    };\n\n    if (!Firebase.apps.length) {\n      //just a check for no firebase duplicates\n      Firebase.initializeApp(firebaseConfig);\n    }\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  render() {\n    // const { developers } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"50vh\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: BVGLogoWithShadow,\n          alt: \"Main Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n          type: \"button\",\n          onClick: () => {\n            console.log('Google Auth Clicked');\n            authentication();\n          },\n          children: \" Log in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"gif\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bearGif,\n          onmouseover: bearGif,\n          onmouseout: bearGif,\n          id: \"beargif\",\n          alt: \"bear:)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gorillaGif,\n          onmouseover: gorillaGif,\n          onmouseout: gorillaGif,\n          id: \"gorillagif\",\n          alt: \"gorilla:(\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/views/Login/Login.js"],"names":["React","Firebase","firebaseConfig","GoogleButton","authentication","Redirect","BVGLogoWithShadow","Box","bearGif","gorillaGif","BrowserRouter","Router","Link","Route","App","Component","constructor","props","signedIn","writeUserData","database","ref","set","state","console","log","getUserData","on","snapshot","val","setState","handleSubmit","event","preventDefault","name","refs","value","role","uid","developers","devIndex","findIndex","data","Date","getTime","toString","push","removeData","developer","newState","filter","updateData","renderOut","apps","length","initializeApp","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Firebase from 'firebase';\nimport firebaseConfig from '../../services/config';\nimport GoogleButton from '../../components/GoogleButton.js';\nimport {authentication} from '../../helpers/authentication.js';\nimport { Redirect } from 'react-router-dom';\nimport BVGLogoWithShadow from '../../assets/BVGLogoWithShadow.png';\nimport { Box } from \"@material-ui/core\";\nimport './Login.css';\nimport bearGif from '../../assets/beargif.gif';\nimport gorillaGif from '../../assets/gorilla.gif';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  signedIn = true;\n  constructor(props) {\n    super(props);\n\n    if (!Firebase.apps.length) { //just a check for no firebase duplicates\n    Firebase.initializeApp(firebaseConfig);\n    }\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  loggedIn\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  writeUserData = () => {\n    Firebase.database()\n      .ref(\"/\")\n      .set(this.state);\n    console.log(\"DATA SAVED\");\n  };\n\n  getUserData = () => {\n     let ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", snapshot => {\n      const state = snapshot.val();\n      this.setState(state);\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let name = this.refs.name.value;\n    let role = this.refs.role.value;\n    let uid = this.refs.uid.value;\n\n    if (uid && name && role) {\n      const { developers } = this.state;\n      const devIndex = developers.findIndex(data => {\n        return data.uid === uid;\n      });\n      developers[devIndex].name = name;\n      developers[devIndex].role = role;\n      this.setState({ developers });\n    } else if (name && role) {\n      const uid = new Date().getTime().toString();\n      const { developers } = this.state;\n      developers.push({ uid, name, role });\n      this.setState({ developers });\n    }\n    this.refs.name.value = \"\";\n    this.refs.role.value = \"\";\n    this.refs.uid.value = \"\";\n  };\n\n  removeData = developer => {\n    const { developers } = this.state;\n    const newState = developers.filter(data => {\n      return data.uid !== developer.uid;\n    });\n    this.setState({ developers: newState });\n  };\n\n  updateData = developer => {\n    this.refs.uid.value = developer.uid;\n    this.refs.name.value = developer.name;\n    this.refs.role.value = developer.role;\n  };\n\n  renderOut = (signedIn) => {\n    return ( {signedIn  : <Redirect to=\"/onboardingstepper\"/> })\n  }  \n\n\n\nrender() {\n  \n    // const { developers } = this.state;\n    return (\n      <React.Fragment>\n        {/* <div class=\"logInComponents\"> */}\n        {/* <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        > */}\n          {/* <Pulse class=\"Pulse\"/> */} {/* optional*/}\n          <Box \n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            minHeight=\"50vh\">\n          {/* <div class=\"bottomSpacing\"> */}\n              <img src={BVGLogoWithShadow} alt=\"Main Logo\"/>\n              {/* </div> */}\n              \n              </Box>\n              <Router>\n              \n              <GoogleButton type=\"button\" onClick={() => { \n                console.log('Google Auth Clicked');\n                authentication();    \n              }}> Log in with Google\n                </GoogleButton>\n             \n              </Router>\n               \n                \n       \n      \n             \n              \n        {/* </Grid> */}\n        {/* </div> */}\n  \n        <div class=\"gif\">\n          <img src={bearGif}     onmouseover={bearGif}  \n    onmouseout={bearGif}  id=\"beargif\" alt=\"bear:)\"/>\n          <img src={gorillaGif}     onmouseover={gorillaGif}  \n    onmouseout={gorillaGif}  id=\"gorillagif\" alt=\"gorilla:(\"/>\n          \n        </div>\n\n        \n       \n      </React.Fragment>\n    );\n    \n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}