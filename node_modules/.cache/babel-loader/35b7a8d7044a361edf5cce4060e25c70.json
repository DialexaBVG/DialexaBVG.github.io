{"ast":null,"code":"var _jsxFileName = \"/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/views/Login/Login.js\";\nimport React from 'react';\nimport Firebase from 'firebase';\nimport firebaseConfig from '../../services/config';\nimport GoogleButton from '../../components/GoogleButton.js';\nimport { authentication } from '../../helpers/authentication.js';\nimport BVGLogoWithShadow from '../../assets/BVGLogoWithShadow.png';\nimport { Box } from \"@material-ui/core\";\nimport './Login.css';\nimport bearGif from '../../assets/beargif.gif';\nimport gorillaGif from '../../assets/gorilla.gif';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.writeUserData = () => {\n      Firebase.database().ref(\"/\").set(this.state);\n      console.log(\"DATA SAVED\");\n    };\n\n    this.getUserData = () => {\n      let ref = Firebase.database().ref(\"/\");\n      ref.on(\"value\", snapshot => {\n        const state = snapshot.val();\n        this.setState(state);\n      });\n    };\n\n    if (!Firebase.apps.length) {\n      //just a check for no firebase duplicates\n      Firebase.initializeApp(firebaseConfig);\n    }\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"50vh\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: BVGLogoWithShadow,\n          alt: \"Main Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n          type: \"button\",\n          onClick: () => {\n            console.log('Google Auth Clicked');\n            authentication();\n          },\n          children: \" Log in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"gif\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: bearGif,\n          onmouseover: bearGif,\n          onmouseout: bearGif,\n          id: \"beargif\",\n          alt: \"bear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: gorillaGif,\n          onmouseover: gorillaGif,\n          onmouseout: gorillaGif,\n          id: \"gorillagif\",\n          alt: \"gorilla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/views/Login/Login.js"],"names":["React","Firebase","firebaseConfig","GoogleButton","authentication","BVGLogoWithShadow","Box","bearGif","gorillaGif","BrowserRouter","Router","Link","Route","App","Component","constructor","props","writeUserData","database","ref","set","state","console","log","getUserData","on","snapshot","val","setState","apps","length","initializeApp","developers","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Firebase from 'firebase';\nimport firebaseConfig from '../../services/config';\nimport GoogleButton from '../../components/GoogleButton.js';\nimport {authentication} from '../../helpers/authentication.js';\nimport BVGLogoWithShadow from '../../assets/BVGLogoWithShadow.png';\nimport { Box } from \"@material-ui/core\";\nimport './Login.css';\nimport bearGif from '../../assets/beargif.gif';\nimport gorillaGif from '../../assets/gorilla.gif';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    if (!Firebase.apps.length) { //just a check for no firebase duplicates\n    Firebase.initializeApp(firebaseConfig);\n    }\n\n    this.state = {\n      developers: []\n    };\n  }\n\n  componentDidMount() {\n    this.getUserData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      this.writeUserData();\n    }\n  }\n\n  writeUserData = () => {\n    Firebase.database()\n      .ref(\"/\")\n      .set(this.state);\n    console.log(\"DATA SAVED\");\n  };\n\n  getUserData = () => {\n     let ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", snapshot => {\n      const state = snapshot.val();\n      this.setState(state);\n    });\n  };\n\n    render() {\n        return (\n        <React.Fragment>\n            <Box \n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                minHeight=\"50vh\">\n                <img src={BVGLogoWithShadow} alt=\"Main Logo\"/>                \n            </Box>\n            <Router>\n                <GoogleButton type=\"button\" onClick={() => {\n                    console.log('Google Auth Clicked');\n                    authentication();   \n                }}> Log in with Google\n                </GoogleButton>  \n            </Router>\n            <div class=\"gif\">\n                <img src={bearGif} onmouseover={bearGif} onmouseout={bearGif} id=\"beargif\" alt=\"bear\"/>\n                <img src={gorillaGif} onmouseover={gorillaGif} onmouseout={gorillaGif} id=\"gorillagif\" alt=\"gorilla\"/>\n            </div>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}