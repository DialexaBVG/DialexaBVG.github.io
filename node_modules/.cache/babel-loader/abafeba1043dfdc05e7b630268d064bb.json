{"ast":null,"code":"var _jsxFileName = \"/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/components/Game/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Question from './Question.js';\nimport QuestionCount from './QuestionCount.js';\nimport AnswerOption from './AnswerOption.js';\nimport BVGLogoWithShadow from \"../../assets/BVGLogoShadow.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return /*#__PURE__*/_jsxDEV(AnswerOption, {\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected\n    }, key.content, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"40%\",\n        src: BVGLogoWithShadow,\n        alt: \"Main Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quizBox\",\n        children: [/*#__PURE__*/_jsxDEV(QuestionCount, {\n          counter: props.questionId,\n          total: props.questionTotal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          content: props.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"answerOptions\",\n          children: props.answerOptions.map(renderAnswerOptions)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Quiz;\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/summergerhart/Documents/GitHub/real-dialexa-deets/src/components/Game/Quiz.js"],"names":["React","PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","BVGLogoWithShadow","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9B,wBACE,QAAC,YAAD;AAEE,MAAA,aAAa,EAAEA,GAAG,CAACC,OAFrB;AAGE,MAAA,UAAU,EAAED,GAAG,CAACE,IAHlB;AAIE,MAAA,MAAM,EAAEJ,KAAK,CAACK,MAJhB;AAKE,MAAA,UAAU,EAAEL,KAAK,CAACM,UALpB;AAME,MAAA,gBAAgB,EAAEN,KAAK,CAACO;AAN1B,OACOL,GAAG,CAACC,OADX;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAEH,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,KAAX;AAAgB,QAAA,GAAG,EAAEK,iBAArB;AAAwC,QAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE,QAAC,aAAD;AACE,UAAA,OAAO,EAAER,KAAK,CAACM,UADjB;AAEE,UAAA,KAAK,EAAEN,KAAK,CAACS;AAFf;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAET,KAAK,CAACU;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,oBACGV,KAAK,CAACW,aAAN,CAAoBC,GAApB,CAAwBX,mBAAxB;AADH;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KA/BMF,I;AAiCPA,IAAI,CAACc,SAAL,GAAiB;AACfR,EAAAA,MAAM,EAAEV,SAAS,CAACmB,MAAV,CAAiBC,UADV;AAEfJ,EAAAA,aAAa,EAAEhB,SAAS,CAACqB,KAAV,CAAgBD,UAFhB;AAGfE,EAAAA,OAAO,EAAEtB,SAAS,CAACuB,MAAV,CAAiBH,UAHX;AAIfL,EAAAA,QAAQ,EAAEf,SAAS,CAACmB,MAAV,CAAiBC,UAJZ;AAKfT,EAAAA,UAAU,EAAEX,SAAS,CAACuB,MAAV,CAAiBH,UALd;AAMfN,EAAAA,aAAa,EAAEd,SAAS,CAACuB,MAAV,CAAiBH,UANjB;AAOfR,EAAAA,gBAAgB,EAAEZ,SAAS,CAACwB,IAAV,CAAeJ;AAPlB,CAAjB;AAUA,eAAehB,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Question from './Question.js';\nimport QuestionCount from './QuestionCount.js';\nimport AnswerOption from './AnswerOption.js';\nimport BVGLogoWithShadow from '../../assets/BVGLogoShadow.svg';\n\n\nfunction Quiz(props) {\n    function renderAnswerOptions(key) {\n        return (\n          <AnswerOption\n            key={key.content}\n            answerContent={key.content}\n            answerType={key.type}\n            answer={props.answer}\n            questionId={props.questionId}\n            onAnswerSelected={props.onAnswerSelected}\n          />\n        );\n      }\n    \n    return (\n      <div>\n      <div className=\"quiz\">\n        <img width=\"40%\"src={BVGLogoWithShadow} alt=\"Main Logo\"/>\n        <div className=\"quizBox\">\n          <QuestionCount\n            counter={props.questionId}\n            total={props.questionTotal}\n          />\n          <Question content={props.question} />\n          <ul className=\"answerOptions\">\n            {props.answerOptions.map(renderAnswerOptions)}\n          </ul>\n        </div>\n        </div>\n        </div>\n    );\n  }\n  \n  Quiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    counter: PropTypes.number.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n  };\n  \n  export default Quiz;"]},"metadata":{},"sourceType":"module"}